   <ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 259,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1120,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 258,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 259,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1120,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 258,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 58432 },
        [Symbol(async_id_symbol)]: 267,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Host',
        '127.0.0.1:46679',
        'Accept-Encoding',
        'gzip, deflate',
        'Content-Type',
        'application/json',
        'authorization',
        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        'Content-Length',
        '133',
        'Connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 259,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1120,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 258,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 259,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1120,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 258,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 58432 },
        [Symbol(async_id_symbol)]: 267,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/users',
      originalUrl: '/users',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/',
        path: '/',
        href: '/',
        _raw: '/'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] {
          finish: [Array],
          end: [Function: onevent]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        _closed: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          setEncoding: [Function: socketSetEncoding],
          _paused: false,
          _httpMessage: [Circular *3],
          _peername: [Object],
          [Symbol(async_id_symbol)]: 267,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        req: [Circular *2],
        _sent100: false,
        _expect_continue: false,
        _maxRequestsPerSocket: 0,
        locals: [Object: null prototype] { user: [Object] },
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function: listener] { queue: [Array] },
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'x-powered-by': [Array],
          'access-control-allow-origin': [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      body: {
        username: 'u-new',
        firstName: 'First-new',
        lastName: 'Last-newL',
        password: 'password-new',
        email: 'new@email.com',
        isAdmin: false
      },
      _body: true,
      length: undefined,
      _startAt: [ 42299, 28767146 ],
      _startTime: 2023-10-21T20:47:32.908Z,
      _remoteAddress: '::ffff:127.0.0.1',
      route: Route {
        path: '/',
        stack: [ [Layer], [Layer] ],
        methods: { post: true }
      },
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: '127.0.0.1:46679',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        'content-length': '133',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }

      at log (middleware/auth.js:54:13)

POST /users 401 49 - 14.849 ms
  console.log
    { username: 'u1', isAdmin: false, iat: 1697921252 }

      at log (middleware/auth.js:53:13)

  console.log
    <ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 306,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1171,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 305,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 306,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1171,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 305,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 58546 },
        [Symbol(async_id_symbol)]: 314,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Host',
        '127.0.0.1:44901',
        'Accept-Encoding',
        'gzip, deflate',
        'Content-Type',
        'application/json',
        'authorization',
        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        'Content-Length',
        '132',
        'Connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 306,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1171,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 305,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 306,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1171,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 305,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 58546 },
        [Symbol(async_id_symbol)]: 314,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/users',
      originalUrl: '/users',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/',
        path: '/',
        href: '/',
        _raw: '/'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] {
          finish: [Array],
          end: [Function: onevent]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        _closed: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          setEncoding: [Function: socketSetEncoding],
          _paused: false,
          _httpMessage: [Circular *3],
          _peername: [Object],
          [Symbol(async_id_symbol)]: 314,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        req: [Circular *2],
        _sent100: false,
        _expect_continue: false,
        _maxRequestsPerSocket: 0,
        locals: [Object: null prototype] { user: [Object] },
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function: listener] { queue: [Array] },
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'x-powered-by': [Array],
          'access-control-allow-origin': [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      body: {
        username: 'u-new',
        firstName: 'First-new',
        lastName: 'Last-newL',
        password: 'password-new',
        email: 'new@email.com',
        isAdmin: true
      },
      _body: true,
      length: undefined,
      _startAt: [ 42299, 64301290 ],
      _startTime: 2023-10-21T20:47:32.944Z,
      _remoteAddress: '::ffff:127.0.0.1',
      route: Route {
        path: '/',
        stack: [ [Layer], [Layer] ],
        methods: { post: true }
      },
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: '127.0.0.1:44901',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        'content-length': '132',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }

      at log (middleware/auth.js:54:13)

POST /users 401 49 - 8.141 ms
  console.log
    undefined

      at log (middleware/auth.js:53:13)

  console.log
    <ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 352,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1184,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 351,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 352,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1184,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 351,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype] {},
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 47744 },
        [Symbol(async_id_symbol)]: 360,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Host',
        '127.0.0.1:35043',
        'Accept-Encoding',
        'gzip, deflate',
        'Content-Type',
        'application/json',
        'Content-Length',
        '132',
        'Connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 352,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1184,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 351,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 352,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1184,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 351,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype] {},
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 47744 },
        [Symbol(async_id_symbol)]: 360,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/users',
      originalUrl: '/users',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/',
        path: '/',
        href: '/',
        _raw: '/'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] {
          finish: [Array],
          end: [Function: onevent]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        _closed: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          setEncoding: [Function: socketSetEncoding],
          _paused: false,
          _httpMessage: [Circular *3],
          _peername: [Object],
          [Symbol(async_id_symbol)]: 360,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        req: [Circular *2],
        _sent100: false,
        _expect_continue: false,
        _maxRequestsPerSocket: 0,
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function: listener] { queue: [Array] },
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'x-powered-by': [Array],
          'access-control-allow-origin': [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      body: {
        username: 'u-new',
        firstName: 'First-new',
        lastName: 'Last-newL',
        password: 'password-new',
        email: 'new@email.com',
        isAdmin: true
      },
      _body: true,
      length: undefined,
      _startAt: [ 42299, 76854485 ],
      _startTime: 2023-10-21T20:47:32.956Z,
      _remoteAddress: '::ffff:127.0.0.1',
      route: Route {
        path: '/',
        stack: [ [Layer], [Layer] ],
        methods: { post: true }
      },
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: '127.0.0.1:35043',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '132',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 10,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }

      at log (middleware/auth.js:54:13)

POST /users 401 49 - 6.056 ms
  console.log
    { username: 'u1', isAdmin: false, iat: 1697921252 }

      at log (middleware/auth.js:53:13)

  console.log
    <ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 398,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1194,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 397,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 398,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1194,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 397,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 35876 },
        [Symbol(async_id_symbol)]: 406,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Host',
        '127.0.0.1:34075',
        'Accept-Encoding',
        'gzip, deflate',
        'Content-Type',
        'application/json',
        'authorization',
        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        'Content-Length',
        '20',
        'Connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 398,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1194,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 397,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 398,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1194,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 397,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 35876 },
        [Symbol(async_id_symbol)]: 406,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/users',
      originalUrl: '/users',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/',
        path: '/',
        href: '/',
        _raw: '/'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] {
          finish: [Array],
          end: [Function: onevent]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        _closed: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          setEncoding: [Function: socketSetEncoding],
          _paused: false,
          _httpMessage: [Circular *3],
          _peername: [Object],
          [Symbol(async_id_symbol)]: 406,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        req: [Circular *2],
        _sent100: false,
        _expect_continue: false,
        _maxRequestsPerSocket: 0,
        locals: [Object: null prototype] { user: [Object] },
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function: listener] { queue: [Array] },
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'x-powered-by': [Array],
          'access-control-allow-origin': [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      body: { username: 'u-new' },
      _body: true,
      length: undefined,
      _startAt: [ 42299, 86530909 ],
      _startTime: 2023-10-21T20:47:32.966Z,
      _remoteAddress: '::ffff:127.0.0.1',
      route: Route {
        path: '/',
        stack: [ [Layer], [Layer] ],
        methods: { post: true }
      },
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: '127.0.0.1:34075',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        'content-length': '20',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }

      at log (middleware/auth.js:54:13)

POST /users 401 49 - 7.539 ms
  console.log
    { username: 'u1', isAdmin: false, iat: 1697921252 }

      at log (middleware/auth.js:53:13)

  console.log
    <ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 444,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1206,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 443,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 444,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1206,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 443,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 37218 },
        [Symbol(async_id_symbol)]: 452,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Host',
        '127.0.0.1:33867',
        'Accept-Encoding',
        'gzip, deflate',
        'Content-Type',
        'application/json',
        'authorization',
        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        'Content-Length',
        '131',
        'Connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'POST',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 444,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1206,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 443,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 444,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1206,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 443,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 37218 },
        [Symbol(async_id_symbol)]: 452,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: true,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/users',
      originalUrl: '/users',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/',
        path: '/',
        href: '/',
        _raw: '/'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] {
          finish: [Array],
          end: [Function: onevent]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        _closed: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          setEncoding: [Function: socketSetEncoding],
          _paused: false,
          _httpMessage: [Circular *3],
          _peername: [Object],
          [Symbol(async_id_symbol)]: 452,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        req: [Circular *2],
        _sent100: false,
        _expect_continue: false,
        _maxRequestsPerSocket: 0,
        locals: [Object: null prototype] { user: [Object] },
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function: listener] { queue: [Array] },
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'x-powered-by': [Array],
          'access-control-allow-origin': [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      body: {
        username: 'u-new',
        firstName: 'First-new',
        lastName: 'Last-newL',
        password: 'password-new',
        email: 'not-an-email',
        isAdmin: true
      },
      _body: true,
      length: undefined,
      _startAt: [ 42299, 99027375 ],
      _startTime: 2023-10-21T20:47:32.978Z,
      _remoteAddress: '::ffff:127.0.0.1',
      route: Route {
        path: '/',
        stack: [ [Layer], [Layer] ],
        methods: { post: true }
      },
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: '127.0.0.1:33867',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        'content-length': '131',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }

      at log (middleware/auth.js:54:13)

POST /users 401 49 - 7.210 ms
  console.log
    { username: 'u1', isAdmin: false, iat: 1697921252 }

      at log (middleware/auth.js:53:13)

  console.log
    <ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        constructed: true,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: true,
        dataEmitted: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: null
      },
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 490,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1218,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 489,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 490,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1218,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 489,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 55994 },
        [Symbol(async_id_symbol)]: 498,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [
        'Host',
        '127.0.0.1:33765',
        'Accept-Encoding',
        'gzip, deflate',
        'authorization',
        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        'Connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 490,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1218,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 489,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 490,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1218,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 489,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 55994 },
        [Symbol(async_id_symbol)]: 498,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: false,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/users',
      originalUrl: '/users',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/',
        path: '/',
        href: '/',
        _raw: '/'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] {
          finish: [Array],
          end: [Function: onevent]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        _closed: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          setEncoding: [Function: socketSetEncoding],
          _paused: false,
          _httpMessage: [Circular *3],
          _peername: [Object],
          [Symbol(async_id_symbol)]: 498,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        req: [Circular *2],
        _sent100: false,
        _expect_continue: false,
        _maxRequestsPerSocket: 0,
        locals: [Object: null prototype] { user: [Object] },
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function: listener] { queue: [Array] },
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'x-powered-by': [Array],
          'access-control-allow-origin': [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      body: {},
      _startAt: [ 42299, 110593349 ],
      _startTime: 2023-10-21T20:47:32.990Z,
      _remoteAddress: '::ffff:127.0.0.1',
      route: Route {
        path: '/',
        stack: [ [Layer], [Layer] ],
        methods: { get: true }
      },
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: '127.0.0.1:33765',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 8,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }

      at log (middleware/auth.js:54:13)

GET /users 401 49 - 9.094 ms
  console.log
    undefined

      at log (middleware/auth.js:53:13)

  console.log
    <ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        constructed: true,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: true,
        dataEmitted: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: null
      },
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 539,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1237,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 538,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 539,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1237,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 538,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype] {},
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 48522 },
        [Symbol(async_id_symbol)]: 547,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [
        'Host',
        '127.0.0.1:41251',
        'Accept-Encoding',
        'gzip, deflate',
        'Connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 539,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1237,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 538,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 539,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1237,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 538,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype] {},
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 48522 },
        [Symbol(async_id_symbol)]: 547,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: false,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/users',
      originalUrl: '/users',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/',
        path: '/',
        href: '/',
        _raw: '/'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] {
          finish: [Array],
          end: [Function: onevent]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        _closed: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          setEncoding: [Function: socketSetEncoding],
          _paused: false,
          _httpMessage: [Circular *3],
          _peername: [Object],
          [Symbol(async_id_symbol)]: 547,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        req: [Circular *2],
        _sent100: false,
        _expect_continue: false,
        _maxRequestsPerSocket: 0,
        locals: [Object: null prototype] {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function: listener] { queue: [Array] },
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'x-powered-by': [Array],
          'access-control-allow-origin': [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      body: {},
      _startAt: [ 42299, 128950577 ],
      _startTime: 2023-10-21T20:47:33.008Z,
      _remoteAddress: '::ffff:127.0.0.1',
      route: Route {
        path: '/',
        stack: [ [Layer], [Layer] ],
        methods: { get: true }
      },
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: '127.0.0.1:41251',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 6,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }

      at log (middleware/auth.js:54:13)

GET /users 401 49 - 7.790 ms
  console.log
    { username: 'u1', isAdmin: false, iat: 1697921252 }

      at log (middleware/auth.js:53:13)

  console.log
    <ref *2> IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: null,
        ended: false,
        endEmitted: false,
        reading: false,
        constructed: true,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: true,
        dataEmitted: false,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: null
      },
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 592,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1255,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 591,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 592,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1255,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 591,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 58440 },
        [Symbol(async_id_symbol)]: 600,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: false,
      rawHeaders: [
        'Host',
        '127.0.0.1:39771',
        'Accept-Encoding',
        'gzip, deflate',
        'authorization',
        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        'Connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: false,
          endEmitted: false,
          reading: true,
          constructed: true,
          sync: false,
          needReadable: true,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: false,
          errored: null,
          closed: false,
          closeEmitted: false,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: false,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _events: [Object: null prototype] {
          end: [Array],
          timeout: [Function: socketOnTimeout],
          data: [Function: bound socketOnData],
          error: [Array],
          close: [Array],
          drain: [Function: bound socketOnDrain],
          resume: [Function: onSocketResume],
          pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 592,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1255,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 591,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        _server: Server {
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          requestTimeout: 300000,
          headersTimeout: 60000,
          keepAliveTimeout: 5000,
          connectionsCheckingInterval: 30000,
          joinDuplicateHeaders: undefined,
          rejectNonStandardBodyWrites: false,
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          _connections: 1,
          _handle: [TCP],
          _usingWorkers: false,
          _workers: [],
          _unref: false,
          allowHalfOpen: true,
          pauseOnConnect: false,
          noDelay: true,
          keepAlive: false,
          keepAliveInitialDelay: 0,
          highWaterMark: 16384,
          httpAllowHalfOpen: false,
          timeout: 0,
          maxHeadersCount: null,
          maxRequestsPerSocket: 0,
          _connectionKey: '6::::0',
          [Symbol(IncomingMessage)]: [Function: IncomingMessage],
          [Symbol(ServerResponse)]: [Function: ServerResponse],
          [Symbol(kCapture)]: false,
          [Symbol(async_id_symbol)]: 592,
          [Symbol(http.server.connections)]: ConnectionsList {},
          [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
            _idleTimeout: 30000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 1255,
            _onTimeout: [Function: bound checkConnections],
            _timerArgs: undefined,
            _repeat: 30000,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 591,
            [Symbol(triggerId)]: 0
          },
          [Symbol(kUniqueHeaders)]: null
        },
        parser: HTTPParser {
          '0': null,
          '1': [Function: parserOnHeaders],
          '2': [Function: parserOnHeadersComplete],
          '3': [Function: parserOnBody],
          '4': [Function: parserOnMessageComplete],
          '5': [Function: bound onParserExecute],
          '6': [Function: bound onParserTimeout],
          _headers: [],
          _url: '',
          socket: [Circular *1],
          incoming: [Circular *2],
          outgoing: null,
          maxHeaderPairs: 2000,
          _consumed: true,
          onIncoming: [Function: bound parserOnIncoming],
          [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        setEncoding: [Function: socketSetEncoding],
        _paused: false,
        _httpMessage: ServerResponse {
          _events: [Object: null prototype],
          _eventsCount: 2,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: false,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: true,
          sendDate: true,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          strictContentLength: false,
          _contentLength: null,
          _hasBody: true,
          _trailer: '',
          finished: false,
          _headerSent: false,
          _closed: false,
          socket: [Circular *1],
          _header: null,
          _keepAliveTimeout: 5000,
          _onPendingData: [Function: bound updateOutgoingData],
          req: [Circular *2],
          _sent100: false,
          _expect_continue: false,
          _maxRequestsPerSocket: 0,
          locals: [Object: null prototype],
          _startAt: undefined,
          _startTime: undefined,
          writeHead: [Function: writeHead],
          __onFinished: [Function],
          [Symbol(kCapture)]: false,
          [Symbol(kBytesWritten)]: 0,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype],
          [Symbol(errored)]: null,
          [Symbol(kHighWaterMark)]: 16384,
          [Symbol(kRejectNonStandardBodyWrites)]: false,
          [Symbol(kUniqueHeaders)]: null
        },
        _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 58440 },
        [Symbol(async_id_symbol)]: 600,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          _consumed: true,
          [Symbol(owner_symbol)]: [Circular *1]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: false,
        [Symbol(kSetKeepAliveInitialDelay)]: 0,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: false,
      _dumped: false,
      next: [Function: next],
      baseUrl: '/users',
      originalUrl: '/users',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/',
        path: '/',
        href: '/',
        _raw: '/'
      },
      params: {},
      query: {},
      res: <ref *3> ServerResponse {
        _events: [Object: null prototype] {
          finish: [Array],
          end: [Function: onevent]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        destroyed: false,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        maxRequestsOnConnectionReached: false,
        _defaultKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        strictContentLength: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        _closed: false,
        socket: <ref *1> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _readableState: [ReadableState],
          _events: [Object: null prototype],
          _eventsCount: 8,
          _maxListeners: undefined,
          _writableState: [WritableState],
          allowHalfOpen: true,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: [Server],
          _server: [Server],
          parser: [HTTPParser],
          on: [Function: socketListenerWrap],
          addListener: [Function: socketListenerWrap],
          prependListener: [Function: socketListenerWrap],
          setEncoding: [Function: socketSetEncoding],
          _paused: false,
          _httpMessage: [Circular *3],
          _peername: [Object],
          [Symbol(async_id_symbol)]: 600,
          [Symbol(kHandle)]: [TCP],
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: false,
          [Symbol(kSetKeepAliveInitialDelay)]: 0,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _header: null,
        _keepAliveTimeout: 5000,
        _onPendingData: [Function: bound updateOutgoingData],
        req: [Circular *2],
        _sent100: false,
        _expect_continue: false,
        _maxRequestsPerSocket: 0,
        locals: [Object: null prototype] { user: [Object] },
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Function: listener] { queue: [Array] },
        [Symbol(kCapture)]: false,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(kNeedDrain)]: false,
        [Symbol(corked)]: 0,
        [Symbol(kOutHeaders)]: [Object: null prototype] {
          'x-powered-by': [Array],
          'access-control-allow-origin': [Array]
        },
        [Symbol(errored)]: null,
        [Symbol(kHighWaterMark)]: 16384,
        [Symbol(kRejectNonStandardBodyWrites)]: false,
        [Symbol(kUniqueHeaders)]: null
      },
      body: {},
      _startAt: [ 42299, 147425623 ],
      _startTime: 2023-10-21T20:47:33.027Z,
      _remoteAddress: '::ffff:127.0.0.1',
      route: Route {
        path: '/',
        stack: [ [Layer], [Layer] ],
        methods: { get: true }
      },
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        host: '127.0.0.1:39771',
        'accept-encoding': 'gzip, deflate',
        authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InUxIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTY5NzkyMTI1Mn0.piPmC8x0CFlmzKjJ2oKSfNEz4rgZa_nfh8iX2lLWHJc',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 8,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    }